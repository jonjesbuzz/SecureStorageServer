// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s3.proto

package com.jjemson.s3;

public final class S3Protocol {
  private S3Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(com.jjemson.s3.S3Protocol.Login.login);
    registry.add(com.jjemson.s3.S3Protocol.CheckoutRequest.coRequest);
    registry.add(com.jjemson.s3.S3Protocol.CheckoutResponse.coResponse);
    registry.add(com.jjemson.s3.S3Protocol.CheckinRequest.ciRequest);
    registry.add(com.jjemson.s3.S3Protocol.CheckinResponse.ciResponse);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.jjemson.s3.Security}
   */
  public enum Security
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>CONFIDENTIALITY = 1;</code>
     */
    CONFIDENTIALITY(1),
    /**
     * <code>INTEGRITY = 2;</code>
     */
    INTEGRITY(2),
    /**
     * <code>ALL = 4;</code>
     */
    ALL(4),
    ;

    /**
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>CONFIDENTIALITY = 1;</code>
     */
    public static final int CONFIDENTIALITY_VALUE = 1;
    /**
     * <code>INTEGRITY = 2;</code>
     */
    public static final int INTEGRITY_VALUE = 2;
    /**
     * <code>ALL = 4;</code>
     */
    public static final int ALL_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Security valueOf(int value) {
      return forNumber(value);
    }

    public static Security forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return CONFIDENTIALITY;
        case 2: return INTEGRITY;
        case 4: return ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Security>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Security> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Security>() {
            public Security findValueByNumber(int number) {
              return Security.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.jjemson.s3.S3Protocol.getDescriptor().getEnumTypes().get(0);
    }

    private static final Security[] VALUES = values();

    public static Security valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Security(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.jjemson.s3.Security)
  }

  public interface S3MessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.jjemson.s3.S3Message)
      com.google.protobuf.GeneratedMessageV3.
          ExtendableMessageOrBuilder<S3Message> {

    /**
     * <code>required .com.jjemson.s3.S3Message.MessageType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .com.jjemson.s3.S3Message.MessageType type = 1;</code>
     */
    com.jjemson.s3.S3Protocol.S3Message.MessageType getType();
  }
  /**
   * Protobuf type {@code com.jjemson.s3.S3Message}
   */
  public  static final class S3Message extends
      com.google.protobuf.GeneratedMessageV3.ExtendableMessage<
        S3Message> implements
      // @@protoc_insertion_point(message_implements:com.jjemson.s3.S3Message)
      S3MessageOrBuilder {
    // Use S3Message.newBuilder() to construct.
    private S3Message(com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.jjemson.s3.S3Protocol.S3Message, ?> builder) {
      super(builder);
    }
    private S3Message() {
      type_ = 1;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S3Message(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.jjemson.s3.S3Protocol.S3Message.MessageType value = com.jjemson.s3.S3Protocol.S3Message.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_S3Message_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_S3Message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jjemson.s3.S3Protocol.S3Message.class, com.jjemson.s3.S3Protocol.S3Message.Builder.class);
    }

    /**
     * Protobuf enum {@code com.jjemson.s3.S3Message.MessageType}
     */
    public enum MessageType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CheckinRequest = 1;</code>
       */
      CheckinRequest(1),
      /**
       * <code>CheckinResponse = 2;</code>
       */
      CheckinResponse(2),
      /**
       * <code>CheckoutRequest = 3;</code>
       */
      CheckoutRequest(3),
      /**
       * <code>CheckoutResponse = 4;</code>
       */
      CheckoutResponse(4),
      /**
       * <code>Login = 5;</code>
       */
      Login(5),
      ;

      /**
       * <code>CheckinRequest = 1;</code>
       */
      public static final int CheckinRequest_VALUE = 1;
      /**
       * <code>CheckinResponse = 2;</code>
       */
      public static final int CheckinResponse_VALUE = 2;
      /**
       * <code>CheckoutRequest = 3;</code>
       */
      public static final int CheckoutRequest_VALUE = 3;
      /**
       * <code>CheckoutResponse = 4;</code>
       */
      public static final int CheckoutResponse_VALUE = 4;
      /**
       * <code>Login = 5;</code>
       */
      public static final int Login_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MessageType valueOf(int value) {
        return forNumber(value);
      }

      public static MessageType forNumber(int value) {
        switch (value) {
          case 1: return CheckinRequest;
          case 2: return CheckinResponse;
          case 3: return CheckoutRequest;
          case 4: return CheckoutResponse;
          case 5: return Login;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MessageType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
              public MessageType findValueByNumber(int number) {
                return MessageType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.jjemson.s3.S3Protocol.S3Message.getDescriptor().getEnumTypes().get(0);
      }

      private static final MessageType[] VALUES = values();

      public static MessageType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private MessageType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.jjemson.s3.S3Message.MessageType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .com.jjemson.s3.S3Message.MessageType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.jjemson.s3.S3Message.MessageType type = 1;</code>
     */
    public com.jjemson.s3.S3Protocol.S3Message.MessageType getType() {
      com.jjemson.s3.S3Protocol.S3Message.MessageType result = com.jjemson.s3.S3Protocol.S3Message.MessageType.valueOf(type_);
      return result == null ? com.jjemson.s3.S3Protocol.S3Message.MessageType.CheckinRequest : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .ExtendableMessage<com.jjemson.s3.S3Protocol.S3Message>.ExtensionWriter
          extensionWriter = newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.jjemson.s3.S3Protocol.S3Message)) {
        return super.equals(obj);
      }
      com.jjemson.s3.S3Protocol.S3Message other = (com.jjemson.s3.S3Protocol.S3Message) obj;

      boolean result = true;
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && type_ == other.type_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      result = result &&
          getExtensionFields().equals(other.getExtensionFields());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      hash = hashFields(hash, getExtensionFields());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.jjemson.s3.S3Protocol.S3Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jjemson.s3.S3Protocol.S3Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.S3Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jjemson.s3.S3Protocol.S3Message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.S3Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.S3Message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.S3Message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.S3Message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.S3Message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.S3Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.jjemson.s3.S3Protocol.S3Message prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.jjemson.s3.S3Message}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<
          com.jjemson.s3.S3Protocol.S3Message, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.jjemson.s3.S3Message)
        com.jjemson.s3.S3Protocol.S3MessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_S3Message_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_S3Message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.jjemson.s3.S3Protocol.S3Message.class, com.jjemson.s3.S3Protocol.S3Message.Builder.class);
      }

      // Construct using com.jjemson.s3.S3Protocol.S3Message.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_S3Message_descriptor;
      }

      public com.jjemson.s3.S3Protocol.S3Message getDefaultInstanceForType() {
        return com.jjemson.s3.S3Protocol.S3Message.getDefaultInstance();
      }

      public com.jjemson.s3.S3Protocol.S3Message build() {
        com.jjemson.s3.S3Protocol.S3Message result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.jjemson.s3.S3Protocol.S3Message buildPartial() {
        com.jjemson.s3.S3Protocol.S3Message result = new com.jjemson.s3.S3Protocol.S3Message(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public <Type> Builder setExtension(
          com.google.protobuf.GeneratedMessage.GeneratedExtension<
              com.jjemson.s3.S3Protocol.S3Message, Type> extension,
          Type value) {
        return (Builder) super.setExtension(extension, value);
      }
      public <Type> Builder setExtension(
          com.google.protobuf.GeneratedMessage.GeneratedExtension<
              com.jjemson.s3.S3Protocol.S3Message, java.util.List<Type>> extension,
          int index, Type value) {
        return (Builder) super.setExtension(extension, index, value);
      }
      public <Type> Builder addExtension(
          com.google.protobuf.GeneratedMessage.GeneratedExtension<
              com.jjemson.s3.S3Protocol.S3Message, java.util.List<Type>> extension,
          Type value) {
        return (Builder) super.addExtension(extension, value);
      }
      public <Type> Builder clearExtension(
          com.google.protobuf.GeneratedMessage.GeneratedExtension<
              com.jjemson.s3.S3Protocol.S3Message, ?> extension) {
        return (Builder) super.clearExtension(extension);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.jjemson.s3.S3Protocol.S3Message) {
          return mergeFrom((com.jjemson.s3.S3Protocol.S3Message)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.jjemson.s3.S3Protocol.S3Message other) {
        if (other == com.jjemson.s3.S3Protocol.S3Message.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        if (!extensionsAreInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.jjemson.s3.S3Protocol.S3Message parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.jjemson.s3.S3Protocol.S3Message) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 1;
      /**
       * <code>required .com.jjemson.s3.S3Message.MessageType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.jjemson.s3.S3Message.MessageType type = 1;</code>
       */
      public com.jjemson.s3.S3Protocol.S3Message.MessageType getType() {
        com.jjemson.s3.S3Protocol.S3Message.MessageType result = com.jjemson.s3.S3Protocol.S3Message.MessageType.valueOf(type_);
        return result == null ? com.jjemson.s3.S3Protocol.S3Message.MessageType.CheckinRequest : result;
      }
      /**
       * <code>required .com.jjemson.s3.S3Message.MessageType type = 1;</code>
       */
      public Builder setType(com.jjemson.s3.S3Protocol.S3Message.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .com.jjemson.s3.S3Message.MessageType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 1;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.jjemson.s3.S3Message)
    }

    // @@protoc_insertion_point(class_scope:com.jjemson.s3.S3Message)
    private static final com.jjemson.s3.S3Protocol.S3Message DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.jjemson.s3.S3Protocol.S3Message();
    }

    public static com.jjemson.s3.S3Protocol.S3Message getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<S3Message>
        PARSER = new com.google.protobuf.AbstractParser<S3Message>() {
      public S3Message parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new S3Message(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S3Message> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<S3Message> getParserForType() {
      return PARSER;
    }

    public com.jjemson.s3.S3Protocol.S3Message getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LoginOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.jjemson.s3.Login)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string user = 1;</code>
     */
    boolean hasUser();
    /**
     * <code>required string user = 1;</code>
     */
    java.lang.String getUser();
    /**
     * <code>required string user = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserBytes();
  }
  /**
   * Protobuf type {@code com.jjemson.s3.Login}
   */
  public  static final class Login extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.jjemson.s3.Login)
      LoginOrBuilder {
    // Use Login.newBuilder() to construct.
    private Login(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Login() {
      user_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Login(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              user_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_Login_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_Login_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jjemson.s3.S3Protocol.Login.class, com.jjemson.s3.S3Protocol.Login.Builder.class);
    }

    private int bitField0_;
    public static final int USER_FIELD_NUMBER = 1;
    private volatile java.lang.Object user_;
    /**
     * <code>required string user = 1;</code>
     */
    public boolean hasUser() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string user = 1;</code>
     */
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          user_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string user = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUser()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, user_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, user_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.jjemson.s3.S3Protocol.Login)) {
        return super.equals(obj);
      }
      com.jjemson.s3.S3Protocol.Login other = (com.jjemson.s3.S3Protocol.Login) obj;

      boolean result = true;
      result = result && (hasUser() == other.hasUser());
      if (hasUser()) {
        result = result && getUser()
            .equals(other.getUser());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasUser()) {
        hash = (37 * hash) + USER_FIELD_NUMBER;
        hash = (53 * hash) + getUser().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.jjemson.s3.S3Protocol.Login parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jjemson.s3.S3Protocol.Login parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.Login parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jjemson.s3.S3Protocol.Login parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.Login parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.Login parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.Login parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.Login parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.Login parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.Login parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.jjemson.s3.S3Protocol.Login prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.jjemson.s3.Login}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.jjemson.s3.Login)
        com.jjemson.s3.S3Protocol.LoginOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_Login_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_Login_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.jjemson.s3.S3Protocol.Login.class, com.jjemson.s3.S3Protocol.Login.Builder.class);
      }

      // Construct using com.jjemson.s3.S3Protocol.Login.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        user_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_Login_descriptor;
      }

      public com.jjemson.s3.S3Protocol.Login getDefaultInstanceForType() {
        return com.jjemson.s3.S3Protocol.Login.getDefaultInstance();
      }

      public com.jjemson.s3.S3Protocol.Login build() {
        com.jjemson.s3.S3Protocol.Login result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.jjemson.s3.S3Protocol.Login buildPartial() {
        com.jjemson.s3.S3Protocol.Login result = new com.jjemson.s3.S3Protocol.Login(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.user_ = user_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.jjemson.s3.S3Protocol.Login) {
          return mergeFrom((com.jjemson.s3.S3Protocol.Login)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.jjemson.s3.S3Protocol.Login other) {
        if (other == com.jjemson.s3.S3Protocol.Login.getDefaultInstance()) return this;
        if (other.hasUser()) {
          bitField0_ |= 0x00000001;
          user_ = other.user_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUser()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.jjemson.s3.S3Protocol.Login parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.jjemson.s3.S3Protocol.Login) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object user_ = "";
      /**
       * <code>required string user = 1;</code>
       */
      public boolean hasUser() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string user = 1;</code>
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            user_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string user = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string user = 1;</code>
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        user_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string user = 1;</code>
       */
      public Builder clearUser() {
        bitField0_ = (bitField0_ & ~0x00000001);
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      /**
       * <code>required string user = 1;</code>
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        user_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.jjemson.s3.Login)
    }

    // @@protoc_insertion_point(class_scope:com.jjemson.s3.Login)
    private static final com.jjemson.s3.S3Protocol.Login DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.jjemson.s3.S3Protocol.Login();
    }

    public static com.jjemson.s3.S3Protocol.Login getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Login>
        PARSER = new com.google.protobuf.AbstractParser<Login>() {
      public Login parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Login(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Login> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Login> getParserForType() {
      return PARSER;
    }

    public com.jjemson.s3.S3Protocol.Login getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int LOGIN_FIELD_NUMBER = 1005;
    /**
     * <code>extend .com.jjemson.s3.S3Message { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.jjemson.s3.S3Protocol.S3Message,
        com.jjemson.s3.S3Protocol.Login> login = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.jjemson.s3.S3Protocol.Login.getDefaultInstance(),
          0,
          com.jjemson.s3.S3Protocol.Login.class,
          com.jjemson.s3.S3Protocol.Login.getDefaultInstance());
  }

  public interface CheckoutRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.jjemson.s3.CheckoutRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string document_id = 1;</code>
     */
    boolean hasDocumentId();
    /**
     * <code>required string document_id = 1;</code>
     */
    java.lang.String getDocumentId();
    /**
     * <code>required string document_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getDocumentIdBytes();
  }
  /**
   * Protobuf type {@code com.jjemson.s3.CheckoutRequest}
   */
  public  static final class CheckoutRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.jjemson.s3.CheckoutRequest)
      CheckoutRequestOrBuilder {
    // Use CheckoutRequest.newBuilder() to construct.
    private CheckoutRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CheckoutRequest() {
      documentId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CheckoutRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              documentId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckoutRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckoutRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jjemson.s3.S3Protocol.CheckoutRequest.class, com.jjemson.s3.S3Protocol.CheckoutRequest.Builder.class);
    }

    private int bitField0_;
    public static final int DOCUMENT_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object documentId_;
    /**
     * <code>required string document_id = 1;</code>
     */
    public boolean hasDocumentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string document_id = 1;</code>
     */
    public java.lang.String getDocumentId() {
      java.lang.Object ref = documentId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          documentId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string document_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDocumentIdBytes() {
      java.lang.Object ref = documentId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        documentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDocumentId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, documentId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, documentId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.jjemson.s3.S3Protocol.CheckoutRequest)) {
        return super.equals(obj);
      }
      com.jjemson.s3.S3Protocol.CheckoutRequest other = (com.jjemson.s3.S3Protocol.CheckoutRequest) obj;

      boolean result = true;
      result = result && (hasDocumentId() == other.hasDocumentId());
      if (hasDocumentId()) {
        result = result && getDocumentId()
            .equals(other.getDocumentId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasDocumentId()) {
        hash = (37 * hash) + DOCUMENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDocumentId().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.jjemson.s3.S3Protocol.CheckoutRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.jjemson.s3.S3Protocol.CheckoutRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.jjemson.s3.CheckoutRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.jjemson.s3.CheckoutRequest)
        com.jjemson.s3.S3Protocol.CheckoutRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckoutRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckoutRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.jjemson.s3.S3Protocol.CheckoutRequest.class, com.jjemson.s3.S3Protocol.CheckoutRequest.Builder.class);
      }

      // Construct using com.jjemson.s3.S3Protocol.CheckoutRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        documentId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckoutRequest_descriptor;
      }

      public com.jjemson.s3.S3Protocol.CheckoutRequest getDefaultInstanceForType() {
        return com.jjemson.s3.S3Protocol.CheckoutRequest.getDefaultInstance();
      }

      public com.jjemson.s3.S3Protocol.CheckoutRequest build() {
        com.jjemson.s3.S3Protocol.CheckoutRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.jjemson.s3.S3Protocol.CheckoutRequest buildPartial() {
        com.jjemson.s3.S3Protocol.CheckoutRequest result = new com.jjemson.s3.S3Protocol.CheckoutRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.documentId_ = documentId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.jjemson.s3.S3Protocol.CheckoutRequest) {
          return mergeFrom((com.jjemson.s3.S3Protocol.CheckoutRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.jjemson.s3.S3Protocol.CheckoutRequest other) {
        if (other == com.jjemson.s3.S3Protocol.CheckoutRequest.getDefaultInstance()) return this;
        if (other.hasDocumentId()) {
          bitField0_ |= 0x00000001;
          documentId_ = other.documentId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDocumentId()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.jjemson.s3.S3Protocol.CheckoutRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.jjemson.s3.S3Protocol.CheckoutRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object documentId_ = "";
      /**
       * <code>required string document_id = 1;</code>
       */
      public boolean hasDocumentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public java.lang.String getDocumentId() {
        java.lang.Object ref = documentId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            documentId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDocumentIdBytes() {
        java.lang.Object ref = documentId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          documentId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public Builder setDocumentId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        documentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public Builder clearDocumentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        documentId_ = getDefaultInstance().getDocumentId();
        onChanged();
        return this;
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public Builder setDocumentIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        documentId_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.jjemson.s3.CheckoutRequest)
    }

    // @@protoc_insertion_point(class_scope:com.jjemson.s3.CheckoutRequest)
    private static final com.jjemson.s3.S3Protocol.CheckoutRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.jjemson.s3.S3Protocol.CheckoutRequest();
    }

    public static com.jjemson.s3.S3Protocol.CheckoutRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CheckoutRequest>
        PARSER = new com.google.protobuf.AbstractParser<CheckoutRequest>() {
      public CheckoutRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CheckoutRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CheckoutRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CheckoutRequest> getParserForType() {
      return PARSER;
    }

    public com.jjemson.s3.S3Protocol.CheckoutRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int CO_REQUEST_FIELD_NUMBER = 1003;
    /**
     * <code>extend .com.jjemson.s3.S3Message { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.jjemson.s3.S3Protocol.S3Message,
        com.jjemson.s3.S3Protocol.CheckoutRequest> coRequest = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.jjemson.s3.S3Protocol.CheckoutRequest.getDefaultInstance(),
          0,
          com.jjemson.s3.S3Protocol.CheckoutRequest.class,
          com.jjemson.s3.S3Protocol.CheckoutRequest.getDefaultInstance());
  }

  public interface CheckoutResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.jjemson.s3.CheckoutResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool success = 1;</code>
     */
    boolean hasSuccess();
    /**
     * <code>required bool success = 1;</code>
     */
    boolean getSuccess();

    /**
     * <code>optional bytes file_data = 2;</code>
     */
    boolean hasFileData();
    /**
     * <code>optional bytes file_data = 2;</code>
     */
    com.google.protobuf.ByteString getFileData();
  }
  /**
   * Protobuf type {@code com.jjemson.s3.CheckoutResponse}
   */
  public  static final class CheckoutResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.jjemson.s3.CheckoutResponse)
      CheckoutResponseOrBuilder {
    // Use CheckoutResponse.newBuilder() to construct.
    private CheckoutResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CheckoutResponse() {
      success_ = false;
      fileData_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CheckoutResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              success_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              fileData_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckoutResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckoutResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jjemson.s3.S3Protocol.CheckoutResponse.class, com.jjemson.s3.S3Protocol.CheckoutResponse.Builder.class);
    }

    private int bitField0_;
    public static final int SUCCESS_FIELD_NUMBER = 1;
    private boolean success_;
    /**
     * <code>required bool success = 1;</code>
     */
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool success = 1;</code>
     */
    public boolean getSuccess() {
      return success_;
    }

    public static final int FILE_DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString fileData_;
    /**
     * <code>optional bytes file_data = 2;</code>
     */
    public boolean hasFileData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes file_data = 2;</code>
     */
    public com.google.protobuf.ByteString getFileData() {
      return fileData_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSuccess()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, success_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, fileData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, success_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, fileData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.jjemson.s3.S3Protocol.CheckoutResponse)) {
        return super.equals(obj);
      }
      com.jjemson.s3.S3Protocol.CheckoutResponse other = (com.jjemson.s3.S3Protocol.CheckoutResponse) obj;

      boolean result = true;
      result = result && (hasSuccess() == other.hasSuccess());
      if (hasSuccess()) {
        result = result && (getSuccess()
            == other.getSuccess());
      }
      result = result && (hasFileData() == other.hasFileData());
      if (hasFileData()) {
        result = result && getFileData()
            .equals(other.getFileData());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasSuccess()) {
        hash = (37 * hash) + SUCCESS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSuccess());
      }
      if (hasFileData()) {
        hash = (37 * hash) + FILE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getFileData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.jjemson.s3.S3Protocol.CheckoutResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.CheckoutResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.jjemson.s3.S3Protocol.CheckoutResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.jjemson.s3.CheckoutResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.jjemson.s3.CheckoutResponse)
        com.jjemson.s3.S3Protocol.CheckoutResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckoutResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckoutResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.jjemson.s3.S3Protocol.CheckoutResponse.class, com.jjemson.s3.S3Protocol.CheckoutResponse.Builder.class);
      }

      // Construct using com.jjemson.s3.S3Protocol.CheckoutResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        success_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        fileData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckoutResponse_descriptor;
      }

      public com.jjemson.s3.S3Protocol.CheckoutResponse getDefaultInstanceForType() {
        return com.jjemson.s3.S3Protocol.CheckoutResponse.getDefaultInstance();
      }

      public com.jjemson.s3.S3Protocol.CheckoutResponse build() {
        com.jjemson.s3.S3Protocol.CheckoutResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.jjemson.s3.S3Protocol.CheckoutResponse buildPartial() {
        com.jjemson.s3.S3Protocol.CheckoutResponse result = new com.jjemson.s3.S3Protocol.CheckoutResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.success_ = success_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fileData_ = fileData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.jjemson.s3.S3Protocol.CheckoutResponse) {
          return mergeFrom((com.jjemson.s3.S3Protocol.CheckoutResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.jjemson.s3.S3Protocol.CheckoutResponse other) {
        if (other == com.jjemson.s3.S3Protocol.CheckoutResponse.getDefaultInstance()) return this;
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        if (other.hasFileData()) {
          setFileData(other.getFileData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuccess()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.jjemson.s3.S3Protocol.CheckoutResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.jjemson.s3.S3Protocol.CheckoutResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean success_ ;
      /**
       * <code>required bool success = 1;</code>
       */
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public boolean getSuccess() {
        return success_;
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public Builder setSuccess(boolean value) {
        bitField0_ |= 0x00000001;
        success_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public Builder clearSuccess() {
        bitField0_ = (bitField0_ & ~0x00000001);
        success_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString fileData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes file_data = 2;</code>
       */
      public boolean hasFileData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes file_data = 2;</code>
       */
      public com.google.protobuf.ByteString getFileData() {
        return fileData_;
      }
      /**
       * <code>optional bytes file_data = 2;</code>
       */
      public Builder setFileData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fileData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes file_data = 2;</code>
       */
      public Builder clearFileData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fileData_ = getDefaultInstance().getFileData();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.jjemson.s3.CheckoutResponse)
    }

    // @@protoc_insertion_point(class_scope:com.jjemson.s3.CheckoutResponse)
    private static final com.jjemson.s3.S3Protocol.CheckoutResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.jjemson.s3.S3Protocol.CheckoutResponse();
    }

    public static com.jjemson.s3.S3Protocol.CheckoutResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CheckoutResponse>
        PARSER = new com.google.protobuf.AbstractParser<CheckoutResponse>() {
      public CheckoutResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CheckoutResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CheckoutResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CheckoutResponse> getParserForType() {
      return PARSER;
    }

    public com.jjemson.s3.S3Protocol.CheckoutResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int CO_RESPONSE_FIELD_NUMBER = 1004;
    /**
     * <code>extend .com.jjemson.s3.S3Message { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.jjemson.s3.S3Protocol.S3Message,
        com.jjemson.s3.S3Protocol.CheckoutResponse> coResponse = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.jjemson.s3.S3Protocol.CheckoutResponse.getDefaultInstance(),
          0,
          com.jjemson.s3.S3Protocol.CheckoutResponse.class,
          com.jjemson.s3.S3Protocol.CheckoutResponse.getDefaultInstance());
  }

  public interface CheckinRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.jjemson.s3.CheckinRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string document_id = 1;</code>
     */
    boolean hasDocumentId();
    /**
     * <code>required string document_id = 1;</code>
     */
    java.lang.String getDocumentId();
    /**
     * <code>required string document_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getDocumentIdBytes();

    /**
     * <code>required bytes file_data = 2;</code>
     */
    boolean hasFileData();
    /**
     * <code>required bytes file_data = 2;</code>
     */
    com.google.protobuf.ByteString getFileData();

    /**
     * <code>required .com.jjemson.s3.Security security = 3;</code>
     */
    boolean hasSecurity();
    /**
     * <code>required .com.jjemson.s3.Security security = 3;</code>
     */
    com.jjemson.s3.S3Protocol.Security getSecurity();
  }
  /**
   * Protobuf type {@code com.jjemson.s3.CheckinRequest}
   */
  public  static final class CheckinRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.jjemson.s3.CheckinRequest)
      CheckinRequestOrBuilder {
    // Use CheckinRequest.newBuilder() to construct.
    private CheckinRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CheckinRequest() {
      documentId_ = "";
      fileData_ = com.google.protobuf.ByteString.EMPTY;
      security_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CheckinRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              documentId_ = bs;
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              fileData_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.jjemson.s3.S3Protocol.Security value = com.jjemson.s3.S3Protocol.Security.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                security_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckinRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckinRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jjemson.s3.S3Protocol.CheckinRequest.class, com.jjemson.s3.S3Protocol.CheckinRequest.Builder.class);
    }

    private int bitField0_;
    public static final int DOCUMENT_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object documentId_;
    /**
     * <code>required string document_id = 1;</code>
     */
    public boolean hasDocumentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string document_id = 1;</code>
     */
    public java.lang.String getDocumentId() {
      java.lang.Object ref = documentId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          documentId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string document_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDocumentIdBytes() {
      java.lang.Object ref = documentId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        documentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILE_DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString fileData_;
    /**
     * <code>required bytes file_data = 2;</code>
     */
    public boolean hasFileData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes file_data = 2;</code>
     */
    public com.google.protobuf.ByteString getFileData() {
      return fileData_;
    }

    public static final int SECURITY_FIELD_NUMBER = 3;
    private int security_;
    /**
     * <code>required .com.jjemson.s3.Security security = 3;</code>
     */
    public boolean hasSecurity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .com.jjemson.s3.Security security = 3;</code>
     */
    public com.jjemson.s3.S3Protocol.Security getSecurity() {
      com.jjemson.s3.S3Protocol.Security result = com.jjemson.s3.S3Protocol.Security.valueOf(security_);
      return result == null ? com.jjemson.s3.S3Protocol.Security.NONE : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDocumentId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFileData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSecurity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, documentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, fileData_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, security_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, documentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, fileData_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, security_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.jjemson.s3.S3Protocol.CheckinRequest)) {
        return super.equals(obj);
      }
      com.jjemson.s3.S3Protocol.CheckinRequest other = (com.jjemson.s3.S3Protocol.CheckinRequest) obj;

      boolean result = true;
      result = result && (hasDocumentId() == other.hasDocumentId());
      if (hasDocumentId()) {
        result = result && getDocumentId()
            .equals(other.getDocumentId());
      }
      result = result && (hasFileData() == other.hasFileData());
      if (hasFileData()) {
        result = result && getFileData()
            .equals(other.getFileData());
      }
      result = result && (hasSecurity() == other.hasSecurity());
      if (hasSecurity()) {
        result = result && security_ == other.security_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasDocumentId()) {
        hash = (37 * hash) + DOCUMENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDocumentId().hashCode();
      }
      if (hasFileData()) {
        hash = (37 * hash) + FILE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getFileData().hashCode();
      }
      if (hasSecurity()) {
        hash = (37 * hash) + SECURITY_FIELD_NUMBER;
        hash = (53 * hash) + security_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.jjemson.s3.S3Protocol.CheckinRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jjemson.s3.S3Protocol.CheckinRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckinRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jjemson.s3.S3Protocol.CheckinRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckinRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.CheckinRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckinRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.CheckinRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckinRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.CheckinRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.jjemson.s3.S3Protocol.CheckinRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.jjemson.s3.CheckinRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.jjemson.s3.CheckinRequest)
        com.jjemson.s3.S3Protocol.CheckinRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckinRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckinRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.jjemson.s3.S3Protocol.CheckinRequest.class, com.jjemson.s3.S3Protocol.CheckinRequest.Builder.class);
      }

      // Construct using com.jjemson.s3.S3Protocol.CheckinRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        documentId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        fileData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        security_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckinRequest_descriptor;
      }

      public com.jjemson.s3.S3Protocol.CheckinRequest getDefaultInstanceForType() {
        return com.jjemson.s3.S3Protocol.CheckinRequest.getDefaultInstance();
      }

      public com.jjemson.s3.S3Protocol.CheckinRequest build() {
        com.jjemson.s3.S3Protocol.CheckinRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.jjemson.s3.S3Protocol.CheckinRequest buildPartial() {
        com.jjemson.s3.S3Protocol.CheckinRequest result = new com.jjemson.s3.S3Protocol.CheckinRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.documentId_ = documentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fileData_ = fileData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.security_ = security_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.jjemson.s3.S3Protocol.CheckinRequest) {
          return mergeFrom((com.jjemson.s3.S3Protocol.CheckinRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.jjemson.s3.S3Protocol.CheckinRequest other) {
        if (other == com.jjemson.s3.S3Protocol.CheckinRequest.getDefaultInstance()) return this;
        if (other.hasDocumentId()) {
          bitField0_ |= 0x00000001;
          documentId_ = other.documentId_;
          onChanged();
        }
        if (other.hasFileData()) {
          setFileData(other.getFileData());
        }
        if (other.hasSecurity()) {
          setSecurity(other.getSecurity());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDocumentId()) {
          return false;
        }
        if (!hasFileData()) {
          return false;
        }
        if (!hasSecurity()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.jjemson.s3.S3Protocol.CheckinRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.jjemson.s3.S3Protocol.CheckinRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object documentId_ = "";
      /**
       * <code>required string document_id = 1;</code>
       */
      public boolean hasDocumentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public java.lang.String getDocumentId() {
        java.lang.Object ref = documentId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            documentId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDocumentIdBytes() {
        java.lang.Object ref = documentId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          documentId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public Builder setDocumentId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        documentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public Builder clearDocumentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        documentId_ = getDefaultInstance().getDocumentId();
        onChanged();
        return this;
      }
      /**
       * <code>required string document_id = 1;</code>
       */
      public Builder setDocumentIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        documentId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString fileData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes file_data = 2;</code>
       */
      public boolean hasFileData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes file_data = 2;</code>
       */
      public com.google.protobuf.ByteString getFileData() {
        return fileData_;
      }
      /**
       * <code>required bytes file_data = 2;</code>
       */
      public Builder setFileData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fileData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes file_data = 2;</code>
       */
      public Builder clearFileData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fileData_ = getDefaultInstance().getFileData();
        onChanged();
        return this;
      }

      private int security_ = 0;
      /**
       * <code>required .com.jjemson.s3.Security security = 3;</code>
       */
      public boolean hasSecurity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .com.jjemson.s3.Security security = 3;</code>
       */
      public com.jjemson.s3.S3Protocol.Security getSecurity() {
        com.jjemson.s3.S3Protocol.Security result = com.jjemson.s3.S3Protocol.Security.valueOf(security_);
        return result == null ? com.jjemson.s3.S3Protocol.Security.NONE : result;
      }
      /**
       * <code>required .com.jjemson.s3.Security security = 3;</code>
       */
      public Builder setSecurity(com.jjemson.s3.S3Protocol.Security value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        security_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .com.jjemson.s3.Security security = 3;</code>
       */
      public Builder clearSecurity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        security_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.jjemson.s3.CheckinRequest)
    }

    // @@protoc_insertion_point(class_scope:com.jjemson.s3.CheckinRequest)
    private static final com.jjemson.s3.S3Protocol.CheckinRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.jjemson.s3.S3Protocol.CheckinRequest();
    }

    public static com.jjemson.s3.S3Protocol.CheckinRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CheckinRequest>
        PARSER = new com.google.protobuf.AbstractParser<CheckinRequest>() {
      public CheckinRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CheckinRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CheckinRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CheckinRequest> getParserForType() {
      return PARSER;
    }

    public com.jjemson.s3.S3Protocol.CheckinRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int CI_REQUEST_FIELD_NUMBER = 1001;
    /**
     * <code>extend .com.jjemson.s3.S3Message { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.jjemson.s3.S3Protocol.S3Message,
        com.jjemson.s3.S3Protocol.CheckinRequest> ciRequest = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.jjemson.s3.S3Protocol.CheckinRequest.getDefaultInstance(),
          0,
          com.jjemson.s3.S3Protocol.CheckinRequest.class,
          com.jjemson.s3.S3Protocol.CheckinRequest.getDefaultInstance());
  }

  public interface CheckinResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.jjemson.s3.CheckinResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool success = 1;</code>
     */
    boolean hasSuccess();
    /**
     * <code>required bool success = 1;</code>
     */
    boolean getSuccess();

    /**
     * <code>optional string reason = 2;</code>
     */
    boolean hasReason();
    /**
     * <code>optional string reason = 2;</code>
     */
    java.lang.String getReason();
    /**
     * <code>optional string reason = 2;</code>
     */
    com.google.protobuf.ByteString
        getReasonBytes();
  }
  /**
   * Protobuf type {@code com.jjemson.s3.CheckinResponse}
   */
  public  static final class CheckinResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.jjemson.s3.CheckinResponse)
      CheckinResponseOrBuilder {
    // Use CheckinResponse.newBuilder() to construct.
    private CheckinResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CheckinResponse() {
      success_ = false;
      reason_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CheckinResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              success_ = input.readBool();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              reason_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckinResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckinResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jjemson.s3.S3Protocol.CheckinResponse.class, com.jjemson.s3.S3Protocol.CheckinResponse.Builder.class);
    }

    private int bitField0_;
    public static final int SUCCESS_FIELD_NUMBER = 1;
    private boolean success_;
    /**
     * <code>required bool success = 1;</code>
     */
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool success = 1;</code>
     */
    public boolean getSuccess() {
      return success_;
    }

    public static final int REASON_FIELD_NUMBER = 2;
    private volatile java.lang.Object reason_;
    /**
     * <code>optional string reason = 2;</code>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string reason = 2;</code>
     */
    public java.lang.String getReason() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          reason_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string reason = 2;</code>
     */
    public com.google.protobuf.ByteString
        getReasonBytes() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reason_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSuccess()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, success_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, reason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, success_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, reason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.jjemson.s3.S3Protocol.CheckinResponse)) {
        return super.equals(obj);
      }
      com.jjemson.s3.S3Protocol.CheckinResponse other = (com.jjemson.s3.S3Protocol.CheckinResponse) obj;

      boolean result = true;
      result = result && (hasSuccess() == other.hasSuccess());
      if (hasSuccess()) {
        result = result && (getSuccess()
            == other.getSuccess());
      }
      result = result && (hasReason() == other.hasReason());
      if (hasReason()) {
        result = result && getReason()
            .equals(other.getReason());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasSuccess()) {
        hash = (37 * hash) + SUCCESS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSuccess());
      }
      if (hasReason()) {
        hash = (37 * hash) + REASON_FIELD_NUMBER;
        hash = (53 * hash) + getReason().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.jjemson.s3.S3Protocol.CheckinResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jjemson.s3.S3Protocol.CheckinResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckinResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jjemson.s3.S3Protocol.CheckinResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckinResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.CheckinResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckinResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.CheckinResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jjemson.s3.S3Protocol.CheckinResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jjemson.s3.S3Protocol.CheckinResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.jjemson.s3.S3Protocol.CheckinResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.jjemson.s3.CheckinResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.jjemson.s3.CheckinResponse)
        com.jjemson.s3.S3Protocol.CheckinResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckinResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckinResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.jjemson.s3.S3Protocol.CheckinResponse.class, com.jjemson.s3.S3Protocol.CheckinResponse.Builder.class);
      }

      // Construct using com.jjemson.s3.S3Protocol.CheckinResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        success_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        reason_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.jjemson.s3.S3Protocol.internal_static_com_jjemson_s3_CheckinResponse_descriptor;
      }

      public com.jjemson.s3.S3Protocol.CheckinResponse getDefaultInstanceForType() {
        return com.jjemson.s3.S3Protocol.CheckinResponse.getDefaultInstance();
      }

      public com.jjemson.s3.S3Protocol.CheckinResponse build() {
        com.jjemson.s3.S3Protocol.CheckinResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.jjemson.s3.S3Protocol.CheckinResponse buildPartial() {
        com.jjemson.s3.S3Protocol.CheckinResponse result = new com.jjemson.s3.S3Protocol.CheckinResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.success_ = success_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.reason_ = reason_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.jjemson.s3.S3Protocol.CheckinResponse) {
          return mergeFrom((com.jjemson.s3.S3Protocol.CheckinResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.jjemson.s3.S3Protocol.CheckinResponse other) {
        if (other == com.jjemson.s3.S3Protocol.CheckinResponse.getDefaultInstance()) return this;
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        if (other.hasReason()) {
          bitField0_ |= 0x00000002;
          reason_ = other.reason_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuccess()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.jjemson.s3.S3Protocol.CheckinResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.jjemson.s3.S3Protocol.CheckinResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean success_ ;
      /**
       * <code>required bool success = 1;</code>
       */
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public boolean getSuccess() {
        return success_;
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public Builder setSuccess(boolean value) {
        bitField0_ |= 0x00000001;
        success_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public Builder clearSuccess() {
        bitField0_ = (bitField0_ & ~0x00000001);
        success_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object reason_ = "";
      /**
       * <code>optional string reason = 2;</code>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string reason = 2;</code>
       */
      public java.lang.String getReason() {
        java.lang.Object ref = reason_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            reason_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string reason = 2;</code>
       */
      public com.google.protobuf.ByteString
          getReasonBytes() {
        java.lang.Object ref = reason_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reason_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string reason = 2;</code>
       */
      public Builder setReason(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string reason = 2;</code>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000002);
        reason_ = getDefaultInstance().getReason();
        onChanged();
        return this;
      }
      /**
       * <code>optional string reason = 2;</code>
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        reason_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.jjemson.s3.CheckinResponse)
    }

    // @@protoc_insertion_point(class_scope:com.jjemson.s3.CheckinResponse)
    private static final com.jjemson.s3.S3Protocol.CheckinResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.jjemson.s3.S3Protocol.CheckinResponse();
    }

    public static com.jjemson.s3.S3Protocol.CheckinResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CheckinResponse>
        PARSER = new com.google.protobuf.AbstractParser<CheckinResponse>() {
      public CheckinResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CheckinResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CheckinResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CheckinResponse> getParserForType() {
      return PARSER;
    }

    public com.jjemson.s3.S3Protocol.CheckinResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int CI_RESPONSE_FIELD_NUMBER = 1002;
    /**
     * <code>extend .com.jjemson.s3.S3Message { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.jjemson.s3.S3Protocol.S3Message,
        com.jjemson.s3.S3Protocol.CheckinResponse> ciResponse = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.jjemson.s3.S3Protocol.CheckinResponse.getDefaultInstance(),
          0,
          com.jjemson.s3.S3Protocol.CheckinResponse.class,
          com.jjemson.s3.S3Protocol.CheckinResponse.getDefaultInstance());
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_jjemson_s3_S3Message_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_jjemson_s3_S3Message_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_jjemson_s3_Login_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_jjemson_s3_Login_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_jjemson_s3_CheckoutRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_jjemson_s3_CheckoutRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_jjemson_s3_CheckoutResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_jjemson_s3_CheckoutResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_jjemson_s3_CheckinRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_jjemson_s3_CheckinRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_jjemson_s3_CheckinResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_jjemson_s3_CheckinResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\010s3.proto\022\016com.jjemson.s3\"\271\001\n\tS3Message" +
      "\0223\n\004type\030\001 \002(\0162%.com.jjemson.s3.S3Messag" +
      "e.MessageType\"l\n\013MessageType\022\022\n\016CheckinR" +
      "equest\020\001\022\023\n\017CheckinResponse\020\002\022\023\n\017Checkou" +
      "tRequest\020\003\022\024\n\020CheckoutResponse\020\004\022\t\n\005Logi" +
      "n\020\005*\t\010\350\007\020\200\200\200\200\002\"W\n\005Login\022\014\n\004user\030\001 \002(\t2@\n" +
      "\005login\022\031.com.jjemson.s3.S3Message\030\355\007 \001(\013" +
      "2\025.com.jjemson.s3.Login\"w\n\017CheckoutReque" +
      "st\022\023\n\013document_id\030\001 \002(\t2O\n\nco_request\022\031." +
      "com.jjemson.s3.S3Message\030\353\007 \001(\0132\037.com.jj",
      "emson.s3.CheckoutRequest\"\211\001\n\020CheckoutRes" +
      "ponse\022\017\n\007success\030\001 \002(\010\022\021\n\tfile_data\030\002 \001(" +
      "\0142Q\n\013co_response\022\031.com.jjemson.s3.S3Mess" +
      "age\030\354\007 \001(\0132 .com.jjemson.s3.CheckoutResp" +
      "onse\"\264\001\n\016CheckinRequest\022\023\n\013document_id\030\001" +
      " \002(\t\022\021\n\tfile_data\030\002 \002(\014\022*\n\010security\030\003 \002(" +
      "\0162\030.com.jjemson.s3.Security2N\n\nci_reques" +
      "t\022\031.com.jjemson.s3.S3Message\030\351\007 \001(\0132\036.co" +
      "m.jjemson.s3.CheckinRequest\"\204\001\n\017CheckinR" +
      "esponse\022\017\n\007success\030\001 \002(\010\022\016\n\006reason\030\002 \001(\t",
      "2P\n\013ci_response\022\031.com.jjemson.s3.S3Messa" +
      "ge\030\352\007 \001(\0132\037.com.jjemson.s3.CheckinRespon" +
      "se*A\n\010Security\022\010\n\004NONE\020\000\022\023\n\017CONFIDENTIAL" +
      "ITY\020\001\022\r\n\tINTEGRITY\020\002\022\007\n\003ALL\020\004B\034\n\016com.jje" +
      "mson.s3B\nS3Protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_jjemson_s3_S3Message_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_jjemson_s3_S3Message_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_jjemson_s3_S3Message_descriptor,
        new java.lang.String[] { "Type", });
    internal_static_com_jjemson_s3_Login_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_jjemson_s3_Login_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_jjemson_s3_Login_descriptor,
        new java.lang.String[] { "User", });
    internal_static_com_jjemson_s3_CheckoutRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_jjemson_s3_CheckoutRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_jjemson_s3_CheckoutRequest_descriptor,
        new java.lang.String[] { "DocumentId", });
    internal_static_com_jjemson_s3_CheckoutResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_jjemson_s3_CheckoutResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_jjemson_s3_CheckoutResponse_descriptor,
        new java.lang.String[] { "Success", "FileData", });
    internal_static_com_jjemson_s3_CheckinRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_jjemson_s3_CheckinRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_jjemson_s3_CheckinRequest_descriptor,
        new java.lang.String[] { "DocumentId", "FileData", "Security", });
    internal_static_com_jjemson_s3_CheckinResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_jjemson_s3_CheckinResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_jjemson_s3_CheckinResponse_descriptor,
        new java.lang.String[] { "Success", "Reason", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
